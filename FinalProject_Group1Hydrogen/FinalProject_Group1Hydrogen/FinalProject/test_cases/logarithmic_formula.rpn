# Various power and logarithmic formula tests using ipow, pow, root, 
# exp, log, exp10 and log10

2
7
ipow
128
# Now compute the % error = abs(actual/expected - 1)
div
1
-
abs
# Should be zero or very small here

-2
7
ipow
-128
# Now compute the % error = abs(actual/expected - 1)
div
1
-
abs
# Should be zero or very small here so add to previous % error
+

1.5
3.2
pow
3.660092227792233
# Now compute the % error = abs(actual/expected - 1)
div
1
-
abs
# Should be zero or very small here so add to previous % error
+

2
12
root
1.059463094359295
# Now compute the % error = abs(actual/expected - 1)
div
1
-
abs
# Should be zero or very small here so add to previous % error
+

1
exp
e
# Now compute the % error = abs(actual/expected - 1)
div
1
-
abs
# Should be zero or very small here so add to previous % error
+


1
exp10
10
# Now compute the % error = abs(actual/expected - 1)
div
1
-
abs
# Should be zero or very small here so add to previous % error
+

e
log
1
# Now compute the % error = abs(actual/expected - 1)
div
1
-
abs
# Should be zero or very small here so add to previous % error
+

10
log10
1
# Now compute the % error = abs(actual/expected - 1)
div
1
-
abs
# Should be zero or very small here so add to previous % error
+

# Log(base 2) n = log n / log 2
n = 256
n
log
2
log
div
8
# Now compute the % error = abs(actual/expected - 1)
div
1
-
abs
# Should be zero or very small here so add to previous % error
+

# Integration test that runs this script will confirm that
# the final result is zero or very small.
